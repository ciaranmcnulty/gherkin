<?php

/**
 * This code was generated by Berp (http://https://github.com/gasparnagy/berp/).
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 */


namespace Cucumber\Gherkin;

interface RuleType {
    const None = "None";
    const _EOF = "_EOF"; // #EOF
    const _Empty = "_Empty"; // #Empty
    const _Comment = "_Comment"; // #Comment
    const _TagLine = "_TagLine"; // #TagLine
    const _FeatureLine = "_FeatureLine"; // #FeatureLine
    const _BackgroundLine = "_BackgroundLine"; // #BackgroundLine
    const _ScenarioLine = "_ScenarioLine"; // #ScenarioLine
    const _ScenarioOutlineLine = "_ScenarioOutlineLine"; // #ScenarioOutlineLine
    const _ExamplesLine = "_ExamplesLine"; // #ExamplesLine
    const _StepLine = "_StepLine"; // #StepLine
    const _DocStringSeparator = "_DocStringSeparator"; // #DocStringSeparator
    const _TableRow = "_TableRow"; // #TableRow
    const _Language = "_Language"; // #Language
    const _Other = "_Other"; // #Other
    const GherkinDocument = "GherkinDocument"; // GherkinDocument! := Feature?
    const Feature = "Feature"; // Feature! := Feature_Header Background? Scenario_Definition*
    const Feature_Header = "Feature_Header"; // Feature_Header! := #Language? Tags? #FeatureLine Feature_Description
    const Background = "Background"; // Background! := #BackgroundLine Background_Description Scenario_Step*
    const Scenario_Definition = "Scenario_Definition"; // Scenario_Definition! := Tags? (Scenario | ScenarioOutline)
    const Scenario = "Scenario"; // Scenario! := #ScenarioLine Scenario_Description Scenario_Step*
    const ScenarioOutline = "ScenarioOutline"; // ScenarioOutline! := #ScenarioOutlineLine ScenarioOutline_Description ScenarioOutline_Step* Examples_Definition*
    const Examples_Definition = "Examples_Definition"; // Examples_Definition! [#Empty|#Comment|#TagLine-&gt;#ExamplesLine] := Tags? Examples
    const Examples = "Examples"; // Examples! := #ExamplesLine Examples_Description Examples_Table?
    const Examples_Table = "Examples_Table"; // Examples_Table! := #TableRow #TableRow*
    const Scenario_Step = "Scenario_Step"; // Scenario_Step := Step
    const ScenarioOutline_Step = "ScenarioOutline_Step"; // ScenarioOutline_Step := Step
    const Step = "Step"; // Step! := #StepLine Step_Arg?
    const Step_Arg = "Step_Arg"; // Step_Arg := (DataTable | DocString)
    const DataTable = "DataTable"; // DataTable! := #TableRow+
    const DocString = "DocString"; // DocString! := #DocStringSeparator #Other* #DocStringSeparator
    const Tags = "Tags"; // Tags! := #TagLine+
    const Feature_Description = "Feature_Description"; // Feature_Description := Description_Helper
    const Background_Description = "Background_Description"; // Background_Description := Description_Helper
    const Scenario_Description = "Scenario_Description"; // Scenario_Description := Description_Helper
    const ScenarioOutline_Description = "ScenarioOutline_Description"; // ScenarioOutline_Description := Description_Helper
    const Examples_Description = "Examples_Description"; // Examples_Description := Description_Helper
    const Description_Helper = "Description_Helper"; // Description_Helper := #Empty* Description? #Comment*
    const Description = "Description"; // Description! := #Other+
}

interface TokenType {
    const None = "None";
    const EOF = "EOF";
    const Empty = "Empty";
    const Comment = "Comment";
    const TagLine = "TagLine";
    const FeatureLine = "FeatureLine";
    const BackgroundLine = "BackgroundLine";
    const ScenarioLine = "ScenarioLine";
    const ScenarioOutlineLine = "ScenarioOutlineLine";
    const ExamplesLine = "ExamplesLine";
    const StepLine = "StepLine";
    const DocStringSeparator = "DocStringSeparator";
    const TableRow = "TableRow";
    const Language = "Language";
    const Other = "Other";
}

final class Parser
{
    private $builder;

    public function __construct(TokenBuilderInterface $builder)
    {
        $this->builder = $builder;
    }

    public function parse(TokenScannerInterface $tokenScanner, TokenMatcherInterface $tokenMatcher) : string
    {
        $this->builder->reset();
        $tokenMatcher->reset();

        $context = new ParserContext($tokenScanner, $tokenMatcher, [], []);

        $this->startRule($context, RuleType::GherkinDocument);

        $state = 0;
        do {
            $token = $this->readToken($context);
            $state = $this->matchToken($state, $token, $context);
        } while (!$token->isEOF());

        $this->endRule($context, RuleType::GherkinDocument);

        if ($context->errors) {
            // Todo: throw a composite exception
        }

        return $this->builder->getResult();
    }

    private function build(ParserContext $context, Token $token)
    {
        $this->handleAstError($context, function() use ($token)
        {
            $this->builder->build($token);
        });
    }

    private function startRule(ParserContext $context, string $ruleType)
    {
        $this->handleAstError($context, function() use ($ruleType)
        {
            $this->builder->startRule($ruleType);
        });
    }

    private function endRule(ParserContext $context, string $ruleType)
    {
        $this->handleAstError($context, function() use ($ruleType)
        {
            $this->builder->endRule($ruleType);
        });
    }

    private function handleAstError(ParserContext $context, callable $action)
    {
        return $this->handleExternalError($context, $action);
    }

    private function handleExternalError(ParserContext $context, callable $action, $defaultValue = null)
    {
        /** todo: support stopAtFirstError */

        /** todo: support CompositeParserException */

        try {
            return $action();
        }
        catch (ParserException $error) {
            $this->addError($context, $error);
        }

        return $defaultValue;
    }

    private function readToken(ParserContext $context) : Token
    {
        return count($context->tokenQueue) > 0 ? array_shift($context->tokenQueue) : $context->tokenScanner->read();
    }

    private function match_EOF(ParserContext $context, Token $token) : bool
    {
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_EOF($token);
        }, false);
    }

    private function match_Empty(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_Empty($token);
        }, false);
    }

    private function match_Comment(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_Comment($token);
        }, false);
    }

    private function match_TagLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_TagLine($token);
        }, false);
    }

    private function match_FeatureLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_FeatureLine($token);
        }, false);
    }

    private function match_BackgroundLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_BackgroundLine($token);
        }, false);
    }

    private function match_ScenarioLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_ScenarioLine($token);
        }, false);
    }

    private function match_ScenarioOutlineLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_ScenarioOutlineLine($token);
        }, false);
    }

    private function match_ExamplesLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_ExamplesLine($token);
        }, false);
    }

    private function match_StepLine(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_StepLine($token);
        }, false);
    }

    private function match_DocStringSeparator(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_DocStringSeparator($token);
        }, false);
    }

    private function match_TableRow(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_TableRow($token);
        }, false);
    }

    private function match_Language(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_Language($token);
        }, false);
    }

    private function match_Other(ParserContext $context, Token $token) : bool
    {
        if ($token->isEOF()) {
            return false;
        }
        return $this->handleExternalError($context, function () use ($context, $token) {
                return $context->tokenMatcher->match_Other($token);
        }, false);
    }

    private function matchToken(int $state, Token $token, ParserContext $context) : int
    {
        switch($state) {
            case 0:
                $newState = $this->matchTokenAt_0($token, $context);
                break;
            case 1:
                $newState = $this->matchTokenAt_1($token, $context);
                break;
            case 2:
                $newState = $this->matchTokenAt_2($token, $context);
                break;
            case 3:
                $newState = $this->matchTokenAt_3($token, $context);
                break;
            case 4:
                $newState = $this->matchTokenAt_4($token, $context);
                break;
            case 5:
                $newState = $this->matchTokenAt_5($token, $context);
                break;
            case 6:
                $newState = $this->matchTokenAt_6($token, $context);
                break;
            case 7:
                $newState = $this->matchTokenAt_7($token, $context);
                break;
            case 8:
                $newState = $this->matchTokenAt_8($token, $context);
                break;
            case 9:
                $newState = $this->matchTokenAt_9($token, $context);
                break;
            case 10:
                $newState = $this->matchTokenAt_10($token, $context);
                break;
            case 11:
                $newState = $this->matchTokenAt_11($token, $context);
                break;
            case 12:
                $newState = $this->matchTokenAt_12($token, $context);
                break;
            case 13:
                $newState = $this->matchTokenAt_13($token, $context);
                break;
            case 14:
                $newState = $this->matchTokenAt_14($token, $context);
                break;
            case 15:
                $newState = $this->matchTokenAt_15($token, $context);
                break;
            case 16:
                $newState = $this->matchTokenAt_16($token, $context);
                break;
            case 17:
                $newState = $this->matchTokenAt_17($token, $context);
                break;
            case 18:
                $newState = $this->matchTokenAt_18($token, $context);
                break;
            case 19:
                $newState = $this->matchTokenAt_19($token, $context);
                break;
            case 20:
                $newState = $this->matchTokenAt_20($token, $context);
                break;
            case 21:
                $newState = $this->matchTokenAt_21($token, $context);
                break;
            case 22:
                $newState = $this->matchTokenAt_22($token, $context);
                break;
            case 23:
                $newState = $this->matchTokenAt_23($token, $context);
                break;
            case 24:
                $newState = $this->matchTokenAt_24($token, $context);
                break;
            case 25:
                $newState = $this->matchTokenAt_25($token, $context);
                break;
            case 26:
                $newState = $this->matchTokenAt_26($token, $context);
                break;
            case 28:
                $newState = $this->matchTokenAt_28($token, $context);
                break;
            case 29:
                $newState = $this->matchTokenAt_29($token, $context);
                break;
            case 30:
                $newState = $this->matchTokenAt_30($token, $context);
                break;
            case 31:
                $newState = $this->matchTokenAt_31($token, $context);
                break;
            case 32:
                $newState = $this->matchTokenAt_32($token, $context);
                break;
            case 33:
                $newState = $this->matchTokenAt_33($token, $context);
                break;
            default:
                throw new IllegalStateException("Unknown state: " + $state);
        }

        return $newState;
    }

    // Start
    private function matchTokenAt_0(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Language($context, $token)) {
            $this->startRule($context, RuleType::Feature);
            $this->startRule($context, RuleType::Feature_Header);
            $this->build($context, $token);
            
            return 1;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->startRule($context, RuleType::Feature);
            $this->startRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 2;
        }
        if ($this->match_FeatureLine($context, $token)) {
            $this->startRule($context, RuleType::Feature);
            $this->startRule($context, RuleType::Feature_Header);
            $this->build($context, $token);
            
            return 3;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 0;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 0;
        }
        
        $stateComment = "State: 0 - Start";
        $token->detach();
        $expectedTokens =["#EOF", "#Language", "#TagLine", "#FeatureLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 0;

    }

    // GherkinDocument:0>Feature:0>Feature_Header:0>#Language:0
    private function matchTokenAt_1(Token $token, ParserContext $context) : int
    {
        if ($this->match_TagLine($context, $token)) {
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 2;
        }
        if ($this->match_FeatureLine($context, $token)) {
            $this->build($context, $token);
            
            return 3;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 1;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 1;
        }
        
        $stateComment = "State: 1 - GherkinDocument:0>Feature:0>Feature_Header:0>#Language:0";
        $token->detach();
        $expectedTokens =["#TagLine", "#FeatureLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 1;

    }

    // GherkinDocument:0>Feature:0>Feature_Header:1>Tags:0>#TagLine:0
    private function matchTokenAt_2(Token $token, ParserContext $context) : int
    {
        if ($this->match_TagLine($context, $token)) {
            $this->build($context, $token);
            
            return 2;
        }
        if ($this->match_FeatureLine($context, $token)) {
            $this->endRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 3;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 2;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 2;
        }
        
        $stateComment = "State: 2 - GherkinDocument:0>Feature:0>Feature_Header:1>Tags:0>#TagLine:0";
        $token->detach();
        $expectedTokens =["#TagLine", "#FeatureLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 2;

    }

    // GherkinDocument:0>Feature:0>Feature_Header:2>#FeatureLine:0
    private function matchTokenAt_3(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 3;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 5;
        }
        if ($this->match_BackgroundLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Background);
            $this->build($context, $token);
            
            return 6;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->startRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 4;
        }
        
        $stateComment = "State: 3 - GherkinDocument:0>Feature:0>Feature_Header:2>#FeatureLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Empty", "#Comment", "#BackgroundLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 3;

    }

    // GherkinDocument:0>Feature:0>Feature_Header:3>Feature_Description:0>Description_Helper:1>Description:0>#Other:0
    private function matchTokenAt_4(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Feature_Header);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 5;
        }
        if ($this->match_BackgroundLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Background);
            $this->build($context, $token);
            
            return 6;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 4;
        }
        
        $stateComment = "State: 4 - GherkinDocument:0>Feature:0>Feature_Header:3>Feature_Description:0>Description_Helper:1>Description:0>#Other:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#BackgroundLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 4;

    }

    // GherkinDocument:0>Feature:0>Feature_Header:3>Feature_Description:0>Description_Helper:2>#Comment:0
    private function matchTokenAt_5(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 5;
        }
        if ($this->match_BackgroundLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Background);
            $this->build($context, $token);
            
            return 6;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Feature_Header);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 5;
        }
        
        $stateComment = "State: 5 - GherkinDocument:0>Feature:0>Feature_Header:3>Feature_Description:0>Description_Helper:2>#Comment:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#BackgroundLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 5;

    }

    // GherkinDocument:0>Feature:1>Background:0>#BackgroundLine:0
    private function matchTokenAt_6(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 6;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 8;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->startRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 7;
        }
        
        $stateComment = "State: 6 - GherkinDocument:0>Feature:1>Background:0>#BackgroundLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Empty", "#Comment", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 6;

    }

    // GherkinDocument:0>Feature:1>Background:1>Background_Description:0>Description_Helper:1>Description:0>#Other:0
    private function matchTokenAt_7(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Background);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 8;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 7;
        }
        
        $stateComment = "State: 7 - GherkinDocument:0>Feature:1>Background:1>Background_Description:0>Description_Helper:1>Description:0>#Other:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 7;

    }

    // GherkinDocument:0>Feature:1>Background:1>Background_Description:0>Description_Helper:2>#Comment:0
    private function matchTokenAt_8(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 8;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 8;
        }
        
        $stateComment = "State: 8 - GherkinDocument:0>Feature:1>Background:1>Background_Description:0>Description_Helper:2>#Comment:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 8;

    }

    // GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:0>#StepLine:0
    private function matchTokenAt_9(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->startRule($context, RuleType::DataTable);
            $this->build($context, $token);
            
            return 10;
        }
        if ($this->match_DocStringSeparator($context, $token)) {
            $this->startRule($context, RuleType::DocString);
            $this->build($context, $token);
            
            return 32;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 9;
        }
        
        $stateComment = "State: 9 - GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:0>#StepLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#DocStringSeparator", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 9;

    }

    // GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0
    private function matchTokenAt_10(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->build($context, $token);
            
            return 10;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 10;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 10;
        }
        
        $stateComment = "State: 10 - GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 10;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:0>Tags:0>#TagLine:0
    private function matchTokenAt_11(Token $token, ParserContext $context) : int
    {
        if ($this->match_TagLine($context, $token)) {
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Tags);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Tags);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 11;
        }
        
        $stateComment = "State: 11 - GherkinDocument:0>Feature:2>Scenario_Definition:0>Tags:0>#TagLine:0";
        $token->detach();
        $expectedTokens =["#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 11;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:0>#ScenarioLine:0
    private function matchTokenAt_12(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 14;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->startRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 13;
        }
        
        $stateComment = "State: 12 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:0>#ScenarioLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Empty", "#Comment", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 12;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:1>Scenario_Description:0>Description_Helper:1>Description:0>#Other:0
    private function matchTokenAt_13(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 14;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 13;
        }
        
        $stateComment = "State: 13 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:1>Scenario_Description:0>Description_Helper:1>Description:0>#Other:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 13;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:1>Scenario_Description:0>Description_Helper:2>#Comment:0
    private function matchTokenAt_14(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 14;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 14;
        }
        
        $stateComment = "State: 14 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:1>Scenario_Description:0>Description_Helper:2>#Comment:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 14;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:0>#StepLine:0
    private function matchTokenAt_15(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->startRule($context, RuleType::DataTable);
            $this->build($context, $token);
            
            return 16;
        }
        if ($this->match_DocStringSeparator($context, $token)) {
            $this->startRule($context, RuleType::DocString);
            $this->build($context, $token);
            
            return 30;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 15;
        }
        
        $stateComment = "State: 15 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:0>#StepLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#DocStringSeparator", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 15;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0
    private function matchTokenAt_16(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->build($context, $token);
            
            return 16;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 16;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 16;
        }
        
        $stateComment = "State: 16 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 16;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:0>#ScenarioOutlineLine:0
    private function matchTokenAt_17(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 19;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->startRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 18;
        }
        
        $stateComment = "State: 17 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:0>#ScenarioOutlineLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Empty", "#Comment", "#StepLine", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 17;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:1>ScenarioOutline_Description:0>Description_Helper:1>Description:0>#Other:0
    private function matchTokenAt_18(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 19;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 18;
        }
        
        $stateComment = "State: 18 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:1>ScenarioOutline_Description:0>Description_Helper:1>Description:0>#Other:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#StepLine", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 18;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:1>ScenarioOutline_Description:0>Description_Helper:2>#Comment:0
    private function matchTokenAt_19(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 19;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 19;
        }
        
        $stateComment = "State: 19 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:1>ScenarioOutline_Description:0>Description_Helper:2>#Comment:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#StepLine", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 19;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:0>#StepLine:0
    private function matchTokenAt_20(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->startRule($context, RuleType::DataTable);
            $this->build($context, $token);
            
            return 21;
        }
        if ($this->match_DocStringSeparator($context, $token)) {
            $this->startRule($context, RuleType::DocString);
            $this->build($context, $token);
            
            return 28;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 20;
        }
        
        $stateComment = "State: 20 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:0>#StepLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#DocStringSeparator", "#StepLine", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 20;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0
    private function matchTokenAt_21(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->build($context, $token);
            
            return 21;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::DataTable);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 21;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 21;
        }
        
        $stateComment = "State: 21 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:1>Step_Arg:0>__alt1:0>DataTable:0>#TableRow:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#StepLine", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 21;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:0>Tags:0>#TagLine:0
    private function matchTokenAt_22(Token $token, ParserContext $context) : int
    {
        if ($this->match_TagLine($context, $token)) {
            $this->build($context, $token);
            
            return 22;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Tags);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 22;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 22;
        }
        
        $stateComment = "State: 22 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:0>Tags:0>#TagLine:0";
        $token->detach();
        $expectedTokens =["#TagLine", "#ExamplesLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 22;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:0>#ExamplesLine:0
    private function matchTokenAt_23(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 25;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->startRule($context, RuleType::Examples_Table);
            $this->build($context, $token);
            
            return 26;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->startRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 24;
        }
        
        $stateComment = "State: 23 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:0>#ExamplesLine:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Empty", "#Comment", "#TableRow", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 23;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:1>Examples_Description:0>Description_Helper:1>Description:0>#Other:0
    private function matchTokenAt_24(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->build($context, $token);
            
            return 25;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->startRule($context, RuleType::Examples_Table);
            $this->build($context, $token);
            
            return 26;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Description);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 24;
        }
        
        $stateComment = "State: 24 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:1>Examples_Description:0>Description_Helper:1>Description:0>#Other:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#TableRow", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 24;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:1>Examples_Description:0>Description_Helper:2>#Comment:0
    private function matchTokenAt_25(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 25;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->startRule($context, RuleType::Examples_Table);
            $this->build($context, $token);
            
            return 26;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 25;
        }
        
        $stateComment = "State: 25 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:1>Examples_Description:0>Description_Helper:2>#Comment:0";
        $token->detach();
        $expectedTokens =["#EOF", "#Comment", "#TableRow", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 25;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:2>Examples_Table:0>#TableRow:0
    private function matchTokenAt_26(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::Examples_Table);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_TableRow($context, $token)) {
            $this->build($context, $token);
            
            return 26;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::Examples_Table);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::Examples_Table);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::Examples_Table);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::Examples_Table);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::Examples_Table);
            $this->endRule($context, RuleType::Examples);
            $this->endRule($context, RuleType::Examples_Definition);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 26;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 26;
        }
        
        $stateComment = "State: 26 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:3>Examples_Definition:1>Examples:2>Examples_Table:0>#TableRow:0";
        $token->detach();
        $expectedTokens =["#EOF", "#TableRow", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 26;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0
    private function matchTokenAt_28(Token $token, ParserContext $context) : int
    {
        if ($this->match_DocStringSeparator($context, $token)) {
            $this->build($context, $token);
            
            return 29;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 28;
        }
        
        $stateComment = "State: 28 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0";
        $token->detach();
        $expectedTokens =["#DocStringSeparator", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 28;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0
    private function matchTokenAt_29(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 20;
        }
        if ($this->match_TagLine($context, $token)) {
            if ($this->lookahead_0($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 22;
            }
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ExamplesLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Examples_Definition);
            $this->startRule($context, RuleType::Examples);
            $this->build($context, $token);
            
            return 23;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::ScenarioOutline);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 29;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 29;
        }
        
        $stateComment = "State: 29 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:1>ScenarioOutline:2>ScenarioOutline_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0";
        $token->detach();
        $expectedTokens =["#EOF", "#StepLine", "#TagLine", "#ExamplesLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 29;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0
    private function matchTokenAt_30(Token $token, ParserContext $context) : int
    {
        if ($this->match_DocStringSeparator($context, $token)) {
            $this->build($context, $token);
            
            return 31;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 30;
        }
        
        $stateComment = "State: 30 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0";
        $token->detach();
        $expectedTokens =["#DocStringSeparator", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 30;

    }

    // GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0
    private function matchTokenAt_31(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 15;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Scenario);
            $this->endRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 31;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 31;
        }
        
        $stateComment = "State: 31 - GherkinDocument:0>Feature:2>Scenario_Definition:1>__alt0:0>Scenario:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0";
        $token->detach();
        $expectedTokens =["#EOF", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 31;

    }

    // GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0
    private function matchTokenAt_32(Token $token, ParserContext $context) : int
    {
        if ($this->match_DocStringSeparator($context, $token)) {
            $this->build($context, $token);
            
            return 33;
        }
        if ($this->match_Other($context, $token)) {
            $this->build($context, $token);
            
            return 32;
        }
        
        $stateComment = "State: 32 - GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:0>#DocStringSeparator:0";
        $token->detach();
        $expectedTokens =["#DocStringSeparator", "#Other"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 32;

    }

    // GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0
    private function matchTokenAt_33(Token $token, ParserContext $context) : int
    {
        if ($this->match_EOF($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->endRule($context, RuleType::Feature);
            $this->build($context, $token);
            
            return 27;
        }
        if ($this->match_StepLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->startRule($context, RuleType::Step);
            $this->build($context, $token);
            
            return 9;
        }
        if ($this->match_TagLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Tags);
            $this->build($context, $token);
            
            return 11;
        }
        if ($this->match_ScenarioLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::Scenario);
            $this->build($context, $token);
            
            return 12;
        }
        if ($this->match_ScenarioOutlineLine($context, $token)) {
            $this->endRule($context, RuleType::DocString);
            $this->endRule($context, RuleType::Step);
            $this->endRule($context, RuleType::Background);
            $this->startRule($context, RuleType::Scenario_Definition);
            $this->startRule($context, RuleType::ScenarioOutline);
            $this->build($context, $token);
            
            return 17;
        }
        if ($this->match_Comment($context, $token)) {
            $this->build($context, $token);
            
            return 33;
        }
        if ($this->match_Empty($context, $token)) {
            $this->build($context, $token);
            
            return 33;
        }
        
        $stateComment = "State: 33 - GherkinDocument:0>Feature:1>Background:2>Scenario_Step:0>Step:1>Step_Arg:0>__alt1:1>DocString:2>#DocStringSeparator:0";
        $token->detach();
        $expectedTokens =["#EOF", "#StepLine", "#TagLine", "#ScenarioLine", "#ScenarioOutlineLine", "#Comment", "#Empty"];
        $error = $token->isEOF()
            ? new ParserException\UnexpectedEofException($token, $expectedTokens, $stateComment)
            : new ParserException\UnexpectedTokenException($token, $expectedTokens, $stateComment);

        if ($this->stopAtFirstError) {
            throw $error;
        }

        $this->addError($context, $error);

        return 33;

    }
}

